package com.iodice.mediasearch

class METRICS {
    companion object {
        const val API_SOURCE_POST_DURATION = "API_SOURCE_POST_DURATION_DURATION"
        const val API_SOURCE_GET_DURATION = "API_SOURCE_GET_DURATION"
        const val API_SOURCE_GET_ALL_DURATION = "API_SOURCE_GET_ALL_DURATION"

        const val API_MEDIA_POST_DURATION = "API_MEDIA_POST_DURATION"
        const val API_MEDIA_GET_DURATION = "API_MEDIA_GET_DURATION"
        const val API_MEDIA_GET_ALL_DURATION = "API_SOURCE_GET_ALL_DURATION"

        const val API_QUERY_DURATION = "API_QUERY_DURATION"

        const val REPOSITORY_CALL_ATTEMPTS = "REPOSITORY_CALL_ATTEMPTS"
        const val REPOSITORY_PUT_DURATION = "REPOSITORY_PUT_DURATION"
        const val REPOSITORY_GET_DURATION = "REPOSITORY_GET_DURATION"
        const val REPOSITORY_GET_ALL_WITH_PK_DURATION = "REPOSITORY_GET_ALL_WITH_PK_DURATION"
        const val REPOSITORY_GET_ALL_WITH_IDS_DURATION = "REPOSITORY_GET_ALL_WITH_IDS_DURATION"
        const val REPOSITORY_GET_ALL_DURATION = "REPOSITORY_GET_ALL_DURATION"
        const val REPOSITORY_DELETE_DURATION = "REPOSITORY_DELETE_DURATION"

        const val SEARCH_CLIENT_GET_DURATION = "SEARCH_CLIENT_GET_DURATION"

        const val MISSING_INDEX_IDENTIFIED = "MISSING_INDEX_IDENTIFIED"
    }
}

class AUDIO {
    companion object {
        const val BITRATE = 16
        const val SAMPLE_RATE = 16000
    }
}

class SOURCES {
    companion object {
        const val HUB_HOPPER = "https://hubhopper.com/api/podcasts"
    }
}